name: Upload Python Package

on:
  push:
    tags:
      - 'v*'
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        # Clean any existing dist directory to avoid uploading PyInstaller artifacts
        rm -rf dist/
        
        # Build source and wheel distributions
        python -m build
        
        # List what's in the dist directory
        echo "Files in dist directory:"
        ls -la dist/
        
        # Check if wheel files exist and upload them
        if ls dist/*.whl 1> /dev/null 2>&1; then
          echo "Uploading wheels and source distributions..."
          twine upload dist/*.whl dist/*.tar.gz
        elif ls dist/*.tar.gz 1> /dev/null 2>&1; then
          echo "No wheel files found. Uploading source distributions only..."
          twine upload dist/*.tar.gz
        else
          echo "No distribution files found to upload. Skipping PyPI upload."
          # This is not an error condition - the build might be focused on app bundles only
          # We'll exit with 0 to allow the workflow to continue
          exit 0
        fi 